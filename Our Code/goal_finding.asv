function [to_goal, goal_found] = goal_finding(rpos, robot_goal)

%
%
%   pos(3) =  pi/2           pos(3)=90, pi
%                               |
%                             + + +
%   ++++++++                 +  |  +                
%   +        +              +   |   +              
%   +         +             +   |   +                   
%   +        +              +   |   +             
%   ++++++++                +   |   +                  
%                           ++++|++++               
%    ------------------------------------------------------



to_goal(1) = sqrt((-rpos(2) + robot_goal(2))^2 + (-rpos(1) + robot_goal(1))^2);
%world angle
worldAng = atan2((robot_goal(2)-rpos(2)),(robot_goal(1)-rpos(1)));

if  2*pi> rpos(3) && rpos(3)>= pi
    if rpos(3)> worldGoalAng && worldGoalAng >= rpos(3)-pi;
        to_goal(2) = worldGoalAng - rpos(3);
    else
        to_goal(2) = 
    end
if  pi> new_posn(3) && new_posn(3) >= 0
   if new_posn(3)+ pi > goal_ang && goal_ang > new_posn3
       turn ccw
   else
       turn cw
   end

%robot angle: angle of the robot to the goal 
%to the left of the center line axis is + angle direction
to_goal(2) =  worldAng;

%check if essentially reached goal

if to_goal(1) < 12
    goal_found = 1; 
else 
    goal_found = 0;
end

end